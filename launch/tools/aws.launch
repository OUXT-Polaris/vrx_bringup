<?xml version="1.0"?>
<launch>
    <arg name="cloudwatch_config_file" default="$(find vrx_bringup)/aws_config/cloudwatch.yaml"/>
    <arg name="health_metric_collector_config_file" default="$(find vrx_bringup)/aws_config/health_metric_collector.yaml"/>
    <arg name="cloudwatch_metric_collector_config_file" default="$(find vrx_bringup)/aws_config/cloudwatch_metric_collector.yaml"/>
    <arg name="aws_iot_config_gile" default="$(find vrx_bringup)/aws_config/aws_iot.yaml"/>
    <arg name="output" default="log" />

    <include file="$(find cloudwatch_logger)/launch/cloudwatch_logger.launch" >
        <arg name="config_file" value="$(arg cloudwatch_config_file)"/>
        <arg name="output" value="$(arg output)"/>
    </include>

    <include file="$(find health_metric_collector)/launch/health_metric_collector.launch" >
        <arg name="config_file" value="$(arg health_metric_collector_config_file)"/>
    </include>

    <include file="$(find cloudwatch_metrics_collector)/launch/sample_application.launch">
        <arg name="config_file" value="$(arg cloudwatch_metric_collector_config_file)"/>
    </include>

    <node name="mqtt_bridge" pkg="mqtt_bridge" type="mqtt_bridge_node.py" output="screen">
        <rosparam command="delete" param="" />
        <rosparam command="load" ns="mqtt" file="$(find vrx_bringup)/aws_config/aws_iot.yaml" />
        <rosparam command="load" file="$(find vrx_bringup)/config/mqtt_bridge.yaml" />

        <rosparam param="mqtt/tls/ca_certs" subst_value="true">$(find vrx_bringup)/aws_config/certs/AmazonRootCA1.pem</rosparam>
        <rosparam param="mqtt/tls/certfile" subst_value="true">$(find vrx_bringup)/aws_config/certs/45b2a5b642-certificate.pem.crt</rosparam>
        <rosparam param="mqtt/tls/keyfile" subst_value="true">$(find vrx_bringup)/aws_config/certs/45b2a5b642-private.pem.key</rosparam>
    </node>
</launch>